name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Set CI environment variable
        run: echo "CI=false" >> $GITHUB_ENV
        
      - name: Build
        run: npm run build

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
    env:
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install rsync and openssh
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync openssh-client

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build/

      - name: Configure SSH
        run: |
          eval $(ssh-agent -s)
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          chmod 700 ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          ssh-keyscan -t rsa ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Server
        run: |
          rsync -avzPq build/ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_DIR }}/
          
      - name: Configure AWS credentials from Production account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ARN }}
          aws-region: us-east-1
      
      - name: Deploy to AWS S3
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} 'cd ${{ secrets.DEPLOY_DIR }} && aws s3 sync . s3://${{ secrets.S3_BUCKET }}/client'
          
